{"version":3,"sources":["config.js","layouts/Menu.tsx","layouts/Page404.js","layouts/Home.tsx","components/Loading.js","layouts/RenderPdf.tsx","layouts/Manual.tsx","App.js","index.js"],"names":["global","Menu","imgUrl","pic","useState","currentPic","setCurrentPic","isOpen","setIsOpen","mainSrc","onCloseRequest","style","textAlign","map","idx","key","src","alt","maxWidth","height","onClick","Page404","CssBaseline","Container","Typography","variant","paragraph","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","component","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","Home","classes","useParams","brandid","brandtype","setValue","isS81","setIsS81","data","setData","error","setError","initialUrl","fetchUrl","setFetchUrl","useEffect","a","Axios","console","fetchData","className","AppBar","position","undefined","display","Tabs","onChange","event","newValue","aria-label","Tab","label","wrapped","Loading","margin","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","RenderPdf","numPages","setNumPages","manualid","toUpperCase","file","onLoadSuccess","pdf","loading","Array","from","el","pageNumber","Manual","hist","createBrowserHistory","App","history","path","process","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.50057d1b.chunk.js","sourcesContent":["export const global = {\r\n  i18n: {\r\n    welcome: {\r\n      en: \"Welcome\",\r\n      fa: \"خوش آمدید\"\r\n    }\r\n    // rest of your translation object\r\n  },\r\n  apiServer: \"https://www.sukishidelivery.com/api/\"\r\n  // other global config variables you wish\r\n};","import React, { useState } from 'react'\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { global } from '../config';\r\n\r\nconst Menu: React.FC<ImageProps> = ({ imgUrl }) => {\r\n  const [currentPic, setCurrentPic] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const renderPic = (pic: Array<string>) => {\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        {pic ?\r\n          pic.map((pic, idx) =>\r\n            <img key={idx}\r\n\r\n              src={`${global.apiServer}${pic}`}\r\n              alt={pic}\r\n              style={{ maxWidth: '100%', height: 'auto' }}\r\n              onClick={() => {\r\n                setIsOpen(true)\r\n                setCurrentPic(pic)\r\n              }}\r\n            />\r\n          )\r\n          :\r\n          <div>Now loading...</div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={`${global.apiServer}${currentPic}`}\r\n          onCloseRequest={() => setIsOpen(false)}\r\n        />\r\n      )}\r\n      {renderPic(imgUrl)}\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Page404() {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h1\">404</Typography>\r\n        <Typography variant=\"h4\">Oops! You're lost.</Typography>\r\n        <Typography paragraph={true}>The page you are looking for was not found.</Typography>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Menu from './Menu';\r\nimport { useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { global } from '../config';\r\nimport Page404 from './Page404';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'span'} variant={'body2'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    'aria-controls': `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst Home: React.FC = () => {\r\n  const classes = useStyles();\r\n  let { brandid, brandtype } = useParams<RouteParamTypes>();\r\n  const [value, setValue] = useState('ovl');\r\n  const [isS81, setIsS81] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  let initialUrl = ''\r\n  if (brandtype === 'catalogue') {\r\n    initialUrl = `${global.apiServer}readfiles?brandid=${brandid}-${value}&type=${brandtype}`\r\n  } else {\r\n    initialUrl = `${global.apiServer}readfiles?brandid=${brandid}&type=${brandtype}`\r\n  }\r\n  const [fetchUrl, setFetchUrl] = useState(initialUrl);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const { data } = await Axios(fetchUrl)\r\n        setData(data)\r\n      } catch (error) {\r\n        console.error('fetchData ' + error)\r\n        setError(error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [fetchUrl, value])\r\n\r\n  useEffect(() => {\r\n    if (brandid === 'bq-huahin') {\r\n      setIsS81(true)\r\n      setValue(\"alc\")\r\n      setFetchUrl(`${global.apiServer}readfiles?brandid=${brandid}-alc&type=${brandtype}`)\r\n    }\r\n  }, [brandid, brandtype])\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setValue(newValue);\r\n    setFetchUrl(`${global.apiServer}readfiles?brandid=${brandid}-${newValue}&type=${brandtype}`)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={brandtype === 'catalogue' ? undefined : { display: \"none\" }} >\r\n        <Tabs value={value}\r\n          variant=\"fullWidth\"\r\n          onChange={handleChange}\r\n          aria-label=\"wrapped label tabs example\">\r\n          {!isS81 &&\r\n            <Tab\r\n              value=\"ovl\"\r\n              label=\"Overload\"\r\n              wrapped\r\n              {...a11yProps('ovl')}\r\n            />\r\n          }\r\n          <Tab value=\"alc\" label=\"A lacarte\" {...a11yProps('alc')} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {!isS81 &&\r\n        <TabPanel value={value} index=\"ovl\">\r\n          <Menu\r\n            imgUrl={data}\r\n          />\r\n        </TabPanel>\r\n      }\r\n      <TabPanel value={value} index=\"alc\">\r\n        <Menu\r\n          imgUrl={data}\r\n\r\n        />\r\n      </TabPanel>\r\n      {error && <Page404 />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div style={{ margin: 20 }}>\r\n      <img src={process.env.PUBLIC_URL + '/load.gif'} alt=\"loading\" />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport Loading from '../components/Loading'\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nexport default function RenderPdf() {\r\n  const [numPages, setNumPages] = useState<number>(1);\r\n  let { manualid } = useParams<RouteParamTypes>();\r\n\r\n  function onDocumentLoadSuccess(pdf: pdfjs.PDFDocumentProxy) {\r\n    setNumPages(pdf.numPages);\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <header>\r\n        <h1>{`${manualid}`.toUpperCase()}</h1>\r\n      </header>\r\n      <div className=\"Example__container__document\">\r\n        <Document\r\n          file={`/manual/${manualid}.pdf`}\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n          loading={<Loading />}\r\n          options={options}\r\n        >\r\n          {\r\n            Array.from(\r\n              new Array(numPages),\r\n              (el, index) => (\r\n                <Page\r\n                  loading={<Loading />}\r\n                  key={`page_${index + 1}`}\r\n                  pageNumber={index + 1}\r\n                />\r\n              ),\r\n            )\r\n          }\r\n        </Document>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport RenderPdf from './RenderPdf';\r\n\r\nexport default function Manual() {\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xl\">\r\n        <RenderPdf />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./layouts/Home\";\r\nimport Page404 from \"./layouts/Page404\";\r\nimport Manual from \"./layouts/Manual\";\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={hist}>\r\n      <Switch>\r\n        {/* <Route\r\n          exact\r\n          path={`${process.env.PUBLIC_URL}/t2`}\r\n          render={(props) => <HomeT2 forRender={propsT2} {...props} />}\r\n        /> */}\r\n        <Route\r\n          path={`${process.env.PUBLIC_URL}/manual/:manualid`}\r\n          render={(props) => <Manual {...props} />}\r\n        />\r\n        <Route\r\n          path={`${process.env.PUBLIC_URL}/:brandtype/:brandid`}\r\n          render={(props) => <Home {...props} />}\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}